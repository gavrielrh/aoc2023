const alphaToNum: Record<string, string> = {
  "zero": "0",
  "one": "1",
  "two": "2",
  "three": "3",
  "four": "4",
  "five": "5",
  "six": "6",
  "seven": "7",
  "eight": "8",
  "nine": "9",
};

// roots = [\dzotfsen]

const digits = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];

function getFirstDigit(input: string): string {
  for (let i = 0; i < input.length; i++) {
    const c = input[i];
    if (digits.includes(c)) {
      return c;
    }
    // z -> check if next three chars are ero
    if (c === "z" && input.slice(i + 1, i + 4) === "ero") {
      return "0";
    }
    // o -> check if next two chars are ne
    if (c === "o" && input.slice(i + 1, i + 3) === "ne") {
      return "1";
    }
    // t -> check if next two chars are wo
    //   -> check if next four chars are hree
    if (c === "t") {
      if (input.slice(i + 1, i + 3) === "wo") {
        return "2";
      }
      if (input.slice(i + 1, i + 5) === "hree") {
        return "3";
      }
    }
    // f -> check if next four chars are our
    //   -> check if next four chars are ive
    if (c === "f") {
      if (input.slice(i + 1, i + 4) === "our") {
        return "4";
      }
      if (input.slice(i + 1, i + 4) === "ive") {
        return "5";
      }
    }
    // s -> check if next two chars are ix
    if (c === "s" && input.slice(i + 1, i + 3) === "ix") {
      return "6";
    }
    //   -> check if next four chars are even
    // e -> check if next four chars are ight
    // n -> check if next three chars are ine
  }
  return "";
}

function getLastDigit(input: string): string {
  for (let i = input.length - 1; i >= 0; i--) {
    const c = input[i];
    if (["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"].includes(c)) {
      return c;
    }
  }
  throw new Error(`No last digit found :( ${input}`);
}

/**
 * Get each line
 * For each line, get the first digit and the last digit
 * Combine these digits together ('1' + '2' = '12') into a line value
 * Sum the value of each line
 */
export function part1(input: string): number {
  const lines = input.split("\n").filter((line) => line.length > 0);
  let sum = 0;
  lines.forEach((line) => {
    const firstDigit = getFirstDigit(line);
    const lastDigit = getLastDigit(line);
    const value = parseInt(firstDigit + lastDigit, 10);
    sum += value;
  });
  return sum;
}

export function part2(input: string): number {
  const lines = input.split("\n").filter((line) => line.length > 0);
  let sum = 0;
  lines.forEach((line) => {
    const firstDigit = getFirstDigit(line);
    const lastDigit = getLastDigit(line);
    const value = parseInt(firstDigit + lastDigit, 10);
    console.log(`${firstDigit} + ${lastDigit} = ${value}`);
    sum += value;
  });
  return sum;
}

if (import.meta.main) {
  const input = Deno.readTextFileSync("./input1.txt");
  console.log(part1(input));
  console.log(part2(input));
}
